version: "3.6"
services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: recipes_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  hasura:
    image: hasura/graphql-engine:v2.36.0
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/recipes_db
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/recipes_db
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"9f3d57c29f03be8f4ad88b19c495345f5d0a219b9f78df6129ab7f60a76d879d"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  golang-backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      hasura:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      HASURA_ENDPOINT: http://hasura:8080/v1/graphql
      HASURA_ADMIN_SECRET: myadminsecretkey
      JWT_SECRET: 9f3d57c29f03be8f4ad88b19c495345f5d0a219b9f78df6129ab7f60a76d879d
      CHAPA_SECRET_KEY: your-chapa-secret-key
      DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/recipes_db
      GIN_MODE: debug
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data:
